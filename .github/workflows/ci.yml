name: Scala CI

on:
  push:
    branches:
      - "**"
    # Do not activate CI on tags for now. For releases, run the build the initial release build
    # tags:
    #   - "**"

  pull_request:
    branches:
      - master

jobs:
  build:
   runs-on: ubuntu-latest

   env:
     SCALA_VERSION: ${{ matrix.scala }}
     POSTGRES_PASSWORD: postgres
     MYSQL_PASSWORD: root

   strategy:
     matrix:
       scala: [2.11.12, 2.12.10, 2.13.2, 3.0.2]
       module: [base, db, js, async, codegen, bigdata]
       include:
         - scala: 2.11.12
           scala_short: 211
           scala_short_dot: 2.11
         - scala: 2.12.10
           scala_short: 212
           scala_short_dot: 2.12
         - scala: 2.13.2
           scala_short: 213
           scala_short_dot: 2.13
         - scala: 3.0.2
           scala_short: 30
           scala_short_dot: 3.0
       exclude:
         # For now, only do the `base` build for Scala 3
         - scala: 3.0.2
           module: db
         - scala: 3.0.2
           module: js
         - scala: 3.0.2
           module: async
         - scala: 3.0.2
           module: codegen
         - scala: 3.0.2
           module: bigdata
         # For other modules, `base` build is already included
         - scala: 2.11.12
           module: base
         - scala: 2.12.10
           module: base
         - scala: 2.13.2
           module: base
         # Do not build 2.11 Scala JS anymore since various modules such as scala-collection-compat are missing for it
         - scala: 2.11.12
           module: js

   name: Build ${{matrix.scala_short_dot}} - ${{matrix.module}}

   steps:
   - uses: actions/checkout@v2
   - name: Cache sbt
     uses: actions/cache@v2
     with:
       path: |
         ~/.cache/coursier
         ~/.sbt
       key: ${{ runner.os }}-${{matrix.scala}}-${{matrix.module}}-${{ hashFiles('**/build.sbt') }}

   - name: Setup Java and Scala
     uses: olafurpg/setup-scala@v10
     with:
       java-version: 1.8.0

   - name: Build modules
     run: |
       export SCALA_VERSION=${{ matrix.scala }}
       echo "SCALA_VERSION='$SCALA_VERSION'"
       ./build/build.sh ${{ matrix.module }}

  release:
   if: ${{github.event_name != 'pull_request'}}
   runs-on: ubuntu-latest

   needs: build

   strategy:
     matrix:
       scala: [2.11.12, 2.12.10, 2.13.2, 3.0.2]
       module: [base, db, js, async, codegen, bigdata]
       include:
         - scala: 2.11.12
           scala_short: 211
           scala_short_dot: 2.11
         - scala: 2.12.10
           scala_short: 212
           scala_short_dot: 2.12
         - scala: 2.13.2
           scala_short: 213
           scala_short_dot: 2.13
         - scala: 3.0.2
           scala_short: 30
           scala_short_dot: 3.0
       exclude:
         - scala: 3.0.2
           module: db
         - scala: 3.0.2
           module: js
         - scala: 3.0.2
           module: async
         - scala: 3.0.2
           module: codegen
         - scala: 3.0.2
           module: bigdata
         # Do not release 2.11 Scala JS anymore since various modules such as scala-collection-compat are missing for it
         - scala: 2.11.12
           module: js

   name: Release ${{matrix.scala_short_dot}} - ${{matrix.module}}

   steps:
   - uses: actions/checkout@v2
   - name: Cache sbt
     uses: actions/cache@v2
     with:
       path: |
         ~/.cache/coursier
         ~/.sbt
       key: ${{ runner.os }}-${{matrix.scala}}-${{matrix.module}}-${{ hashFiles('**/build.sbt') }}

   - name: Setup Java and Scala
     uses: olafurpg/setup-scala@v10
     with:
       java-version: 1.8.0

   - name: Release
     run: |
       export SCALA_VERSION=${{ matrix.scala }}
       echo "SCALA_VERSION='$SCALA_VERSION'"
       export PGP_PASSPHRASE=${{ secrets.PGP_PASSPHRASE }}
       export PULL_REQUEST=${{ !!github.event.pull_request }}
       echo "PULL_REQUEST='$PULL_REQUEST'"
       export GITHUB_REF=${{ github.ref }}
       echo "GITHUB_REF='$GITHUB_REF'"
       export BRANCH=$(git for-each-ref ${{ github.ref }} --format='%(refname:short)')
       echo "BRANCH='$BRANCH'"
       ./build/release.sh ${{ matrix.scala_short }} ${{ matrix.module }}
     env:
       ENCRYPTION_PASSWORD: ${{ secrets.ENCRYPTION_PASSWORD }}

  publish:
    if: ${{github.event_name != 'pull_request'}}
    runs-on: ubuntu-latest

    needs: release

    strategy:
      matrix:
        scala: [2.12.10]
        module: [publish]
        include:
          - scala: 2.12.10
            scala_short: 212
            scala_short_dot: 2.12

    name: Publish ${{matrix.scala_short_dot}} - ${{matrix.module}}

    steps:
      - uses: actions/checkout@v2
      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/coursier
            ~/.sbt
          key: ${{ runner.os }}-${{matrix.scala}}-${{matrix.module}}-${{ hashFiles('**/build.sbt') }}

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: 1.8.0

      - name: Release
        run: |
          export SCALA_VERSION=${{ matrix.scala }}
          echo "SCALA_VERSION='$SCALA_VERSION'"
          export PGP_PASSPHRASE=${{ secrets.PGP_PASSPHRASE }}
          export PULL_REQUEST=${{ !!github.event.pull_request }}
          echo "PULL_REQUEST='$PULL_REQUEST'"
          export GITHUB_REF=${{ github.ref }}
          echo "GITHUB_REF='$GITHUB_REF'"
          export BRANCH=$(git for-each-ref ${{ github.ref }} --format='%(refname:short)')
          echo "BRANCH='$BRANCH'"
          ./build/release.sh ${{ matrix.scala_short }} ${{ matrix.module }}
        env:
          ENCRYPTION_PASSWORD: ${{ secrets.ENCRYPTION_PASSWORD }}
