sudo: required
language: scala
jdk: oraclejdk8
dist: trusty
services:
  - docker
  - postgresql
  - mysql
before_install:
  - |
    wget -qO- "https://github.com/crazy-max/travis-wait-enhanced/releases/download/v1.2.0/travis-wait-enhanced_1.2.0_linux_x86_64.tar.gz" | tar -zxvf - travis-wait-enhanced
    mv travis-wait-enhanced /home/travis/bin/
    travis-wait-enhanced --version
    jq --version
addons:
  postgresql: "9.6"
branches:
  except:
    - release
    - publish
    - website
cache:
  directories:
    #- $HOME/.ivy2/cache
    - $HOME/.m2
    - $HOME/.sbt
jobs:
  include:
    - stage: build
      if: type != pull_request
      script: ./build/build.sh db
      scala: 2.11.12
      name: "Databases 2.11 - MySQL, Postgres, Sqlite, H2, SQL Server, Oracle"
    - stage: build
      script: ./build/build.sh db
      scala: 2.12.10
      name: "Databases 2.12 - MySQL, Postgres, Sqlite, H2, SQL Server, Oracle"
    - stage: build
      script: ./build/build.sh db
      scala: 2.13.2
      name: "Databases 2.13 - MySQL, Postgres, Sqlite, H2, SQL Server, Oracle"

    - stage: build
      if: type != pull_request
      script: ./build/build.sh js
      scala: 2.11.12
      name: "Databases 2.11 - JavaScript"
    - stage: build
      script: ./build/build.sh js
      scala: 2.12.10
      name: "Databases 2.12 - JavaScript"
    - stage: build
      script: ./build/build.sh js
      scala: 2.13.1
      name: "Databases 2.13 - JavaScript"

    - stage: build
      if: type != pull_request
      script: ./build/build.sh async
      scala: 2.11.12
      name: "Async, Finagle, NDBC 2.11 - MySQL, Postgres, Sqlite, H2, SQL Server, Oracle"
    - stage: build
      script: ./build/build.sh async
      scala: 2.12.10
      name: "Async, Finagle, NDBC 2.12 - MySQL, Postgres, Sqlite, H2, SQL Server, Oracle"
    - stage: build
      script: ./build/build.sh async
      scala: 2.13.2
      name: "Async, Finagle, NDBC 2.13 - MySQL, Postgres, Sqlite, H2, SQL Server, Oracle"

    - stage: build
      if: type != pull_request
      script: ./build/build.sh codegen
      scala: 2.11.12
      name: "Code Generator 2.11 - MySQL, Postgres, Sqlite, H2, SQL Server, Oracle"
    - stage: build
      if: type != pull_request
      script: ./build/build.sh codegen
      scala: 2.12.10
      name: "Code Generator 2.12 - MySQL, Postgres, Sqlite, H2, SQL Server, Oracle"
    - stage: build
      if: type != pull_request
      script: ./build/build.sh codegen
      scala: 2.13.2
      name: "Code Generator 2.13 - MySQL, Postgres, Sqlite, H2, SQL Server, Oracle"

    - stage: build
      if: type != pull_request
      script: ./build/build.sh bigdata
      scala: 2.11.12
      name: "BigData Databases 2.11 - Cassandra, OrientDB, Spark"
    - stage: build
      script: ./build/build.sh bigdata
      scala: 2.12.10
      name: "BigData Databases 2.12 - Cassandra, OrientDB, Spark"
    - stage: build
      script: ./build/build.sh bigdata
      scala: 2.13.2
      name: "BigData Databases 2.13 - Cassandra, OrientDB, Spark"

    - stage: release
      if: type != pull_request
      scala: 2.12.6
      name: "Release 2.11 base"
      script:
        - ./build/release.sh 211 base
    - stage: release
      if: type != pull_request
      scala: 2.12.6
      name: "Release 2.11 db"
      script:
        - ./build/release.sh 211 db
    - stage: release
      if: type != pull_request
      scala: 2.12.6
      name: "Release 2.11 js"
      script:
        - ./build/release.sh 211 js
    - stage: release
      if: type != pull_request
      scala: 2.12.6
      name: "Release 2.11 async"
      script:
        - ./build/release.sh 211 async
    - stage: release
      if: type != pull_request
      scala: 2.12.6
      name: "Release 2.11 codegen"
      script:
        - ./build/release.sh 211 codegen
    - stage: release
      if: type != pull_request
      scala: 2.12.6
      name: "Release 2.11 bigdata"
      script:
        - ./build/release.sh 211 bigdata

    - stage: release
      if: type != pull_request
      scala: 2.12.6
      name: "Release 2.12 base"
      script:
        - ./build/release.sh 212 base
    - stage: release
      if: type != pull_request
      scala: 2.12.6
      name: "Release 2.12 db"
      script:
        - ./build/release.sh 212 db
    - stage: release
      if: type != pull_request
      scala: 2.12.6
      name: "Release 2.12 js"
      script:
        - ./build/release.sh 212 js
    - stage: release
      if: type != pull_request
      scala: 2.12.6
      name: "Release 2.12 async"
      script:
        - ./build/release.sh 212 async
    - stage: release
      if: type != pull_request
      scala: 2.12.6
      name: "Release 2.12 codegen"
      script:
        - ./build/release.sh 212 codegen
    - stage: release
      if: type != pull_request
      scala: 2.12.6
      name: "Release 2.12 bigdata"
      script:
        - ./build/release.sh 212 bigdata

    - stage: release
      if: type != pull_request
      scala: 2.13.2
      name: "Release 2.13 base"
      script:
        - ./build/release.sh 213 base
    - stage: release
      if: type != pull_request
      scala: 2.13.2
      name: "Release 2.13 db"
      script:
        - ./build/release.sh 213 db
    - stage: release
      if: type != pull_request
      scala: 2.13.2
      name: "Release 2.13 js"
      script:
        - ./build/release.sh 213 js
    - stage: release
      if: type != pull_request
      scala: 2.13.2
      name: "Release 2.13 async"
      script:
        - ./build/release.sh 213 async
    - stage: release
      if: type != pull_request
      scala: 2.13.2
      name: "Release 2.12 codegen"
      script:
        - ./build/release.sh 213 codegen
    - stage: release
      if: type != pull_request
      scala: 2.13.2
      name: "Release 2.13 bigdata"
      script:
        - ./build/release.sh 213 bigdata

    - stage: publish
      if: type != pull_request AND (branch = master OR branch =~ /re-release.*/)
      scala: 2.12.6
      name: "Publish"
      script:
        - ./build/publish.sh
